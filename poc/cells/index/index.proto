syntax = "proto3";

package index;

service FS{
    rpc Stat(FileRequest) returns (FileInfo);
    rpc Chtimes(ChtimesRequest) returns (ChtimesResponse);
    rpc Chmod(ChmodRequest) returns (ChmodResponse); 
    rpc Mkdir(MkdirRequest) returns (MkdirResponse);
    rpc MkdirAll(MkdirAllRequest) returns (MkdirAllResponse); 
    rpc Rename(RenameRequest) returns (RenameResponse);
    rpc RemoveAll(RemoveAllRequest) returns (RemoveAllResponse);
    rpc Remove(RemoveRequest) returns (RemoveResponse);
    rpc Open(stream FileRequest) returns (stream FileResponse);

}

// Requests
message FileRequest{
    oneof Request {
        string name = 1;
        OpenRequest open = 2;
        StatRequest stat = 3;
        TruncateRequest truncate = 4;
        ReadRequest read = 5;
        ReadAtRequest readAt = 6;
        ReaddirRequest readdir = 7;
        ReaddirnamesRequest readdirnames = 8;
        SeekRequest seek = 9;
        WriteRequest write = 10;
        WriteAtRequest writeAt = 11;
    }
}

message ChtimesRequest {
    string name = 1;
    int64 added = 2;
    int64 modified = 3;
}

message ChmodRequest {
    string name = 1;
    uint32 mode = 2;
}

message MkdirRequest {
    string name = 1;
    uint32 perm = 2;
}

message MkdirAllRequest {
    string path = 1;
    uint32 perm = 2;
}

message RenameRequest {
    string oldName = 1;
    string newName = 2;
}

message RemoveAllRequest {
    string path = 1;
}

message RemoveRequest {
    string name = 1;
}

message OpenRequest {
    string name = 1;
    int64 flag = 2;
    uint32 fileMode = 3;
}

message StatRequest {}

message TruncateRequest {
    int64 size = 1;
}

message ReadRequest {}

message ReadAtRequest {
    int64 offset = 1;
}

message ReaddirRequest {
    int32 count = 1;
}

message ReaddirnamesRequest {
    int32 count = 1;
}

message SeekRequest {
    int64 offset = 1;
    enum Whence {
        TOP = 0;
        CURRENT = 1;
        BOTTOM = 2;
    }
    Whence whence = 2;
}

message WriteRequest {
    bytes content = 1;
}

message WriteAtRequest {
    int64 offset = 1;
    bytes content = 2;
}

// Responses
message FileInfo{
    string name = 1;
    int64 size = 2;
    uint32 mode = 3;
    int64 modTime = 4;
    bool isDir = 5;
}

message ChtimesResponse {}

message ChmodResponse {}

message MkdirResponse {}

message MkdirAllResponse {}

message RenameResponse {}

message RemoveAllResponse {}

message RemoveResponse {}

message FileResponse{
    oneof Response {
        OpenResponse open = 1;
        FileInfo fileInfo = 2;
        ReadResponse read = 3;
        ReaddirResponse readdir = 4;
        ReaddirnamesResponse readdirnames = 5;
        SeekResponse seek = 6;
        WriteResponse write = 7;
    }
}

message OpenResponse {
}

message ReadResponse {
    bytes content = 1;
}

message ReaddirResponse {
    repeated FileInfo fileInfo = 1;
}

message ReaddirnamesResponse {
    repeated string names = 1;
}

message SeekResponse {
    int64 offset = 1;
}

message WriteResponse {
    int64 bytesWritten = 1;
}