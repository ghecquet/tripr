// Code generated by protoc-gen-go. DO NOT EDIT.
// source: index.proto

package index

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SeekRequest_Whence int32

const (
	SeekRequest_TOP     SeekRequest_Whence = 0
	SeekRequest_CURRENT SeekRequest_Whence = 1
	SeekRequest_BOTTOM  SeekRequest_Whence = 2
)

var SeekRequest_Whence_name = map[int32]string{
	0: "TOP",
	1: "CURRENT",
	2: "BOTTOM",
}

var SeekRequest_Whence_value = map[string]int32{
	"TOP":     0,
	"CURRENT": 1,
	"BOTTOM":  2,
}

func (x SeekRequest_Whence) String() string {
	return proto.EnumName(SeekRequest_Whence_name, int32(x))
}

func (SeekRequest_Whence) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{15, 0}
}

// Requests
type FileRequest struct {
	// Types that are valid to be assigned to Request:
	//	*FileRequest_Name
	//	*FileRequest_Open
	//	*FileRequest_Stat
	//	*FileRequest_Truncate
	//	*FileRequest_Read
	//	*FileRequest_ReadAt
	//	*FileRequest_Readdir
	//	*FileRequest_Readdirnames
	//	*FileRequest_Seek
	//	*FileRequest_Write
	//	*FileRequest_WriteAt
	Request              isFileRequest_Request `protobuf_oneof:"Request"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *FileRequest) Reset()         { *m = FileRequest{} }
func (m *FileRequest) String() string { return proto.CompactTextString(m) }
func (*FileRequest) ProtoMessage()    {}
func (*FileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{0}
}

func (m *FileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileRequest.Unmarshal(m, b)
}
func (m *FileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileRequest.Marshal(b, m, deterministic)
}
func (m *FileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileRequest.Merge(m, src)
}
func (m *FileRequest) XXX_Size() int {
	return xxx_messageInfo_FileRequest.Size(m)
}
func (m *FileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FileRequest proto.InternalMessageInfo

type isFileRequest_Request interface {
	isFileRequest_Request()
}

type FileRequest_Name struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3,oneof"`
}

type FileRequest_Open struct {
	Open *OpenRequest `protobuf:"bytes,2,opt,name=open,proto3,oneof"`
}

type FileRequest_Stat struct {
	Stat *StatRequest `protobuf:"bytes,3,opt,name=stat,proto3,oneof"`
}

type FileRequest_Truncate struct {
	Truncate *TruncateRequest `protobuf:"bytes,4,opt,name=truncate,proto3,oneof"`
}

type FileRequest_Read struct {
	Read *ReadRequest `protobuf:"bytes,5,opt,name=read,proto3,oneof"`
}

type FileRequest_ReadAt struct {
	ReadAt *ReadAtRequest `protobuf:"bytes,6,opt,name=readAt,proto3,oneof"`
}

type FileRequest_Readdir struct {
	Readdir *ReaddirRequest `protobuf:"bytes,7,opt,name=readdir,proto3,oneof"`
}

type FileRequest_Readdirnames struct {
	Readdirnames *ReaddirnamesRequest `protobuf:"bytes,8,opt,name=readdirnames,proto3,oneof"`
}

type FileRequest_Seek struct {
	Seek *SeekRequest `protobuf:"bytes,9,opt,name=seek,proto3,oneof"`
}

type FileRequest_Write struct {
	Write *WriteRequest `protobuf:"bytes,10,opt,name=write,proto3,oneof"`
}

type FileRequest_WriteAt struct {
	WriteAt *WriteAtRequest `protobuf:"bytes,11,opt,name=writeAt,proto3,oneof"`
}

func (*FileRequest_Name) isFileRequest_Request() {}

func (*FileRequest_Open) isFileRequest_Request() {}

func (*FileRequest_Stat) isFileRequest_Request() {}

func (*FileRequest_Truncate) isFileRequest_Request() {}

func (*FileRequest_Read) isFileRequest_Request() {}

func (*FileRequest_ReadAt) isFileRequest_Request() {}

func (*FileRequest_Readdir) isFileRequest_Request() {}

func (*FileRequest_Readdirnames) isFileRequest_Request() {}

func (*FileRequest_Seek) isFileRequest_Request() {}

func (*FileRequest_Write) isFileRequest_Request() {}

func (*FileRequest_WriteAt) isFileRequest_Request() {}

func (m *FileRequest) GetRequest() isFileRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *FileRequest) GetName() string {
	if x, ok := m.GetRequest().(*FileRequest_Name); ok {
		return x.Name
	}
	return ""
}

func (m *FileRequest) GetOpen() *OpenRequest {
	if x, ok := m.GetRequest().(*FileRequest_Open); ok {
		return x.Open
	}
	return nil
}

func (m *FileRequest) GetStat() *StatRequest {
	if x, ok := m.GetRequest().(*FileRequest_Stat); ok {
		return x.Stat
	}
	return nil
}

func (m *FileRequest) GetTruncate() *TruncateRequest {
	if x, ok := m.GetRequest().(*FileRequest_Truncate); ok {
		return x.Truncate
	}
	return nil
}

func (m *FileRequest) GetRead() *ReadRequest {
	if x, ok := m.GetRequest().(*FileRequest_Read); ok {
		return x.Read
	}
	return nil
}

func (m *FileRequest) GetReadAt() *ReadAtRequest {
	if x, ok := m.GetRequest().(*FileRequest_ReadAt); ok {
		return x.ReadAt
	}
	return nil
}

func (m *FileRequest) GetReaddir() *ReaddirRequest {
	if x, ok := m.GetRequest().(*FileRequest_Readdir); ok {
		return x.Readdir
	}
	return nil
}

func (m *FileRequest) GetReaddirnames() *ReaddirnamesRequest {
	if x, ok := m.GetRequest().(*FileRequest_Readdirnames); ok {
		return x.Readdirnames
	}
	return nil
}

func (m *FileRequest) GetSeek() *SeekRequest {
	if x, ok := m.GetRequest().(*FileRequest_Seek); ok {
		return x.Seek
	}
	return nil
}

func (m *FileRequest) GetWrite() *WriteRequest {
	if x, ok := m.GetRequest().(*FileRequest_Write); ok {
		return x.Write
	}
	return nil
}

func (m *FileRequest) GetWriteAt() *WriteAtRequest {
	if x, ok := m.GetRequest().(*FileRequest_WriteAt); ok {
		return x.WriteAt
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FileRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FileRequest_Name)(nil),
		(*FileRequest_Open)(nil),
		(*FileRequest_Stat)(nil),
		(*FileRequest_Truncate)(nil),
		(*FileRequest_Read)(nil),
		(*FileRequest_ReadAt)(nil),
		(*FileRequest_Readdir)(nil),
		(*FileRequest_Readdirnames)(nil),
		(*FileRequest_Seek)(nil),
		(*FileRequest_Write)(nil),
		(*FileRequest_WriteAt)(nil),
	}
}

type ChtimesRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Added                int64    `protobuf:"varint,2,opt,name=added,proto3" json:"added,omitempty"`
	Modified             int64    `protobuf:"varint,3,opt,name=modified,proto3" json:"modified,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChtimesRequest) Reset()         { *m = ChtimesRequest{} }
func (m *ChtimesRequest) String() string { return proto.CompactTextString(m) }
func (*ChtimesRequest) ProtoMessage()    {}
func (*ChtimesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{1}
}

func (m *ChtimesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChtimesRequest.Unmarshal(m, b)
}
func (m *ChtimesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChtimesRequest.Marshal(b, m, deterministic)
}
func (m *ChtimesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChtimesRequest.Merge(m, src)
}
func (m *ChtimesRequest) XXX_Size() int {
	return xxx_messageInfo_ChtimesRequest.Size(m)
}
func (m *ChtimesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChtimesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChtimesRequest proto.InternalMessageInfo

func (m *ChtimesRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ChtimesRequest) GetAdded() int64 {
	if m != nil {
		return m.Added
	}
	return 0
}

func (m *ChtimesRequest) GetModified() int64 {
	if m != nil {
		return m.Modified
	}
	return 0
}

type ChmodRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Mode                 uint32   `protobuf:"varint,2,opt,name=mode,proto3" json:"mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChmodRequest) Reset()         { *m = ChmodRequest{} }
func (m *ChmodRequest) String() string { return proto.CompactTextString(m) }
func (*ChmodRequest) ProtoMessage()    {}
func (*ChmodRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{2}
}

func (m *ChmodRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChmodRequest.Unmarshal(m, b)
}
func (m *ChmodRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChmodRequest.Marshal(b, m, deterministic)
}
func (m *ChmodRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChmodRequest.Merge(m, src)
}
func (m *ChmodRequest) XXX_Size() int {
	return xxx_messageInfo_ChmodRequest.Size(m)
}
func (m *ChmodRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChmodRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChmodRequest proto.InternalMessageInfo

func (m *ChmodRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ChmodRequest) GetMode() uint32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

type MkdirRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Perm                 uint32   `protobuf:"varint,2,opt,name=perm,proto3" json:"perm,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MkdirRequest) Reset()         { *m = MkdirRequest{} }
func (m *MkdirRequest) String() string { return proto.CompactTextString(m) }
func (*MkdirRequest) ProtoMessage()    {}
func (*MkdirRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{3}
}

func (m *MkdirRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MkdirRequest.Unmarshal(m, b)
}
func (m *MkdirRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MkdirRequest.Marshal(b, m, deterministic)
}
func (m *MkdirRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MkdirRequest.Merge(m, src)
}
func (m *MkdirRequest) XXX_Size() int {
	return xxx_messageInfo_MkdirRequest.Size(m)
}
func (m *MkdirRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MkdirRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MkdirRequest proto.InternalMessageInfo

func (m *MkdirRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MkdirRequest) GetPerm() uint32 {
	if m != nil {
		return m.Perm
	}
	return 0
}

type MkdirAllRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Perm                 uint32   `protobuf:"varint,2,opt,name=perm,proto3" json:"perm,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MkdirAllRequest) Reset()         { *m = MkdirAllRequest{} }
func (m *MkdirAllRequest) String() string { return proto.CompactTextString(m) }
func (*MkdirAllRequest) ProtoMessage()    {}
func (*MkdirAllRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{4}
}

func (m *MkdirAllRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MkdirAllRequest.Unmarshal(m, b)
}
func (m *MkdirAllRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MkdirAllRequest.Marshal(b, m, deterministic)
}
func (m *MkdirAllRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MkdirAllRequest.Merge(m, src)
}
func (m *MkdirAllRequest) XXX_Size() int {
	return xxx_messageInfo_MkdirAllRequest.Size(m)
}
func (m *MkdirAllRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MkdirAllRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MkdirAllRequest proto.InternalMessageInfo

func (m *MkdirAllRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *MkdirAllRequest) GetPerm() uint32 {
	if m != nil {
		return m.Perm
	}
	return 0
}

type RenameRequest struct {
	OldName              string   `protobuf:"bytes,1,opt,name=oldName,proto3" json:"oldName,omitempty"`
	NewName              string   `protobuf:"bytes,2,opt,name=newName,proto3" json:"newName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RenameRequest) Reset()         { *m = RenameRequest{} }
func (m *RenameRequest) String() string { return proto.CompactTextString(m) }
func (*RenameRequest) ProtoMessage()    {}
func (*RenameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{5}
}

func (m *RenameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenameRequest.Unmarshal(m, b)
}
func (m *RenameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenameRequest.Marshal(b, m, deterministic)
}
func (m *RenameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenameRequest.Merge(m, src)
}
func (m *RenameRequest) XXX_Size() int {
	return xxx_messageInfo_RenameRequest.Size(m)
}
func (m *RenameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RenameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RenameRequest proto.InternalMessageInfo

func (m *RenameRequest) GetOldName() string {
	if m != nil {
		return m.OldName
	}
	return ""
}

func (m *RenameRequest) GetNewName() string {
	if m != nil {
		return m.NewName
	}
	return ""
}

type RemoveAllRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveAllRequest) Reset()         { *m = RemoveAllRequest{} }
func (m *RemoveAllRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveAllRequest) ProtoMessage()    {}
func (*RemoveAllRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{6}
}

func (m *RemoveAllRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveAllRequest.Unmarshal(m, b)
}
func (m *RemoveAllRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveAllRequest.Marshal(b, m, deterministic)
}
func (m *RemoveAllRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveAllRequest.Merge(m, src)
}
func (m *RemoveAllRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveAllRequest.Size(m)
}
func (m *RemoveAllRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveAllRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveAllRequest proto.InternalMessageInfo

func (m *RemoveAllRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type RemoveRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveRequest) Reset()         { *m = RemoveRequest{} }
func (m *RemoveRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveRequest) ProtoMessage()    {}
func (*RemoveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{7}
}

func (m *RemoveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveRequest.Unmarshal(m, b)
}
func (m *RemoveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveRequest.Marshal(b, m, deterministic)
}
func (m *RemoveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveRequest.Merge(m, src)
}
func (m *RemoveRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveRequest.Size(m)
}
func (m *RemoveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveRequest proto.InternalMessageInfo

func (m *RemoveRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type OpenRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Flag                 int64    `protobuf:"varint,2,opt,name=flag,proto3" json:"flag,omitempty"`
	FileMode             uint32   `protobuf:"varint,3,opt,name=fileMode,proto3" json:"fileMode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenRequest) Reset()         { *m = OpenRequest{} }
func (m *OpenRequest) String() string { return proto.CompactTextString(m) }
func (*OpenRequest) ProtoMessage()    {}
func (*OpenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{8}
}

func (m *OpenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenRequest.Unmarshal(m, b)
}
func (m *OpenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenRequest.Marshal(b, m, deterministic)
}
func (m *OpenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenRequest.Merge(m, src)
}
func (m *OpenRequest) XXX_Size() int {
	return xxx_messageInfo_OpenRequest.Size(m)
}
func (m *OpenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OpenRequest proto.InternalMessageInfo

func (m *OpenRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OpenRequest) GetFlag() int64 {
	if m != nil {
		return m.Flag
	}
	return 0
}

func (m *OpenRequest) GetFileMode() uint32 {
	if m != nil {
		return m.FileMode
	}
	return 0
}

type StatRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatRequest) Reset()         { *m = StatRequest{} }
func (m *StatRequest) String() string { return proto.CompactTextString(m) }
func (*StatRequest) ProtoMessage()    {}
func (*StatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{9}
}

func (m *StatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatRequest.Unmarshal(m, b)
}
func (m *StatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatRequest.Marshal(b, m, deterministic)
}
func (m *StatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatRequest.Merge(m, src)
}
func (m *StatRequest) XXX_Size() int {
	return xxx_messageInfo_StatRequest.Size(m)
}
func (m *StatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatRequest proto.InternalMessageInfo

type TruncateRequest struct {
	Size                 int64    `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TruncateRequest) Reset()         { *m = TruncateRequest{} }
func (m *TruncateRequest) String() string { return proto.CompactTextString(m) }
func (*TruncateRequest) ProtoMessage()    {}
func (*TruncateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{10}
}

func (m *TruncateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TruncateRequest.Unmarshal(m, b)
}
func (m *TruncateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TruncateRequest.Marshal(b, m, deterministic)
}
func (m *TruncateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TruncateRequest.Merge(m, src)
}
func (m *TruncateRequest) XXX_Size() int {
	return xxx_messageInfo_TruncateRequest.Size(m)
}
func (m *TruncateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TruncateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TruncateRequest proto.InternalMessageInfo

func (m *TruncateRequest) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

type ReadRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadRequest) Reset()         { *m = ReadRequest{} }
func (m *ReadRequest) String() string { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()    {}
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{11}
}

func (m *ReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadRequest.Unmarshal(m, b)
}
func (m *ReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadRequest.Marshal(b, m, deterministic)
}
func (m *ReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadRequest.Merge(m, src)
}
func (m *ReadRequest) XXX_Size() int {
	return xxx_messageInfo_ReadRequest.Size(m)
}
func (m *ReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadRequest proto.InternalMessageInfo

type ReadAtRequest struct {
	Offset               int64    `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadAtRequest) Reset()         { *m = ReadAtRequest{} }
func (m *ReadAtRequest) String() string { return proto.CompactTextString(m) }
func (*ReadAtRequest) ProtoMessage()    {}
func (*ReadAtRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{12}
}

func (m *ReadAtRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadAtRequest.Unmarshal(m, b)
}
func (m *ReadAtRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadAtRequest.Marshal(b, m, deterministic)
}
func (m *ReadAtRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadAtRequest.Merge(m, src)
}
func (m *ReadAtRequest) XXX_Size() int {
	return xxx_messageInfo_ReadAtRequest.Size(m)
}
func (m *ReadAtRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadAtRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadAtRequest proto.InternalMessageInfo

func (m *ReadAtRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type ReaddirRequest struct {
	Count                int32    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReaddirRequest) Reset()         { *m = ReaddirRequest{} }
func (m *ReaddirRequest) String() string { return proto.CompactTextString(m) }
func (*ReaddirRequest) ProtoMessage()    {}
func (*ReaddirRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{13}
}

func (m *ReaddirRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReaddirRequest.Unmarshal(m, b)
}
func (m *ReaddirRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReaddirRequest.Marshal(b, m, deterministic)
}
func (m *ReaddirRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReaddirRequest.Merge(m, src)
}
func (m *ReaddirRequest) XXX_Size() int {
	return xxx_messageInfo_ReaddirRequest.Size(m)
}
func (m *ReaddirRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReaddirRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReaddirRequest proto.InternalMessageInfo

func (m *ReaddirRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ReaddirnamesRequest struct {
	Count                int32    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReaddirnamesRequest) Reset()         { *m = ReaddirnamesRequest{} }
func (m *ReaddirnamesRequest) String() string { return proto.CompactTextString(m) }
func (*ReaddirnamesRequest) ProtoMessage()    {}
func (*ReaddirnamesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{14}
}

func (m *ReaddirnamesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReaddirnamesRequest.Unmarshal(m, b)
}
func (m *ReaddirnamesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReaddirnamesRequest.Marshal(b, m, deterministic)
}
func (m *ReaddirnamesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReaddirnamesRequest.Merge(m, src)
}
func (m *ReaddirnamesRequest) XXX_Size() int {
	return xxx_messageInfo_ReaddirnamesRequest.Size(m)
}
func (m *ReaddirnamesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReaddirnamesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReaddirnamesRequest proto.InternalMessageInfo

func (m *ReaddirnamesRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type SeekRequest struct {
	Offset               int64              `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Whence               SeekRequest_Whence `protobuf:"varint,2,opt,name=whence,proto3,enum=index.SeekRequest_Whence" json:"whence,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SeekRequest) Reset()         { *m = SeekRequest{} }
func (m *SeekRequest) String() string { return proto.CompactTextString(m) }
func (*SeekRequest) ProtoMessage()    {}
func (*SeekRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{15}
}

func (m *SeekRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SeekRequest.Unmarshal(m, b)
}
func (m *SeekRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SeekRequest.Marshal(b, m, deterministic)
}
func (m *SeekRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SeekRequest.Merge(m, src)
}
func (m *SeekRequest) XXX_Size() int {
	return xxx_messageInfo_SeekRequest.Size(m)
}
func (m *SeekRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SeekRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SeekRequest proto.InternalMessageInfo

func (m *SeekRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *SeekRequest) GetWhence() SeekRequest_Whence {
	if m != nil {
		return m.Whence
	}
	return SeekRequest_TOP
}

type WriteRequest struct {
	Content              []byte   `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteRequest) Reset()         { *m = WriteRequest{} }
func (m *WriteRequest) String() string { return proto.CompactTextString(m) }
func (*WriteRequest) ProtoMessage()    {}
func (*WriteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{16}
}

func (m *WriteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteRequest.Unmarshal(m, b)
}
func (m *WriteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteRequest.Marshal(b, m, deterministic)
}
func (m *WriteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteRequest.Merge(m, src)
}
func (m *WriteRequest) XXX_Size() int {
	return xxx_messageInfo_WriteRequest.Size(m)
}
func (m *WriteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WriteRequest proto.InternalMessageInfo

func (m *WriteRequest) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type WriteAtRequest struct {
	Offset               int64    `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Content              []byte   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteAtRequest) Reset()         { *m = WriteAtRequest{} }
func (m *WriteAtRequest) String() string { return proto.CompactTextString(m) }
func (*WriteAtRequest) ProtoMessage()    {}
func (*WriteAtRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{17}
}

func (m *WriteAtRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteAtRequest.Unmarshal(m, b)
}
func (m *WriteAtRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteAtRequest.Marshal(b, m, deterministic)
}
func (m *WriteAtRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteAtRequest.Merge(m, src)
}
func (m *WriteAtRequest) XXX_Size() int {
	return xxx_messageInfo_WriteAtRequest.Size(m)
}
func (m *WriteAtRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteAtRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WriteAtRequest proto.InternalMessageInfo

func (m *WriteAtRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *WriteAtRequest) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

// Responses
type FileInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size                 int64    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Mode                 uint32   `protobuf:"varint,3,opt,name=mode,proto3" json:"mode,omitempty"`
	ModTime              int64    `protobuf:"varint,4,opt,name=modTime,proto3" json:"modTime,omitempty"`
	IsDir                bool     `protobuf:"varint,5,opt,name=isDir,proto3" json:"isDir,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileInfo) Reset()         { *m = FileInfo{} }
func (m *FileInfo) String() string { return proto.CompactTextString(m) }
func (*FileInfo) ProtoMessage()    {}
func (*FileInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{18}
}

func (m *FileInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileInfo.Unmarshal(m, b)
}
func (m *FileInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileInfo.Marshal(b, m, deterministic)
}
func (m *FileInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileInfo.Merge(m, src)
}
func (m *FileInfo) XXX_Size() int {
	return xxx_messageInfo_FileInfo.Size(m)
}
func (m *FileInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FileInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FileInfo proto.InternalMessageInfo

func (m *FileInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FileInfo) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *FileInfo) GetMode() uint32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

func (m *FileInfo) GetModTime() int64 {
	if m != nil {
		return m.ModTime
	}
	return 0
}

func (m *FileInfo) GetIsDir() bool {
	if m != nil {
		return m.IsDir
	}
	return false
}

type ChtimesResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChtimesResponse) Reset()         { *m = ChtimesResponse{} }
func (m *ChtimesResponse) String() string { return proto.CompactTextString(m) }
func (*ChtimesResponse) ProtoMessage()    {}
func (*ChtimesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{19}
}

func (m *ChtimesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChtimesResponse.Unmarshal(m, b)
}
func (m *ChtimesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChtimesResponse.Marshal(b, m, deterministic)
}
func (m *ChtimesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChtimesResponse.Merge(m, src)
}
func (m *ChtimesResponse) XXX_Size() int {
	return xxx_messageInfo_ChtimesResponse.Size(m)
}
func (m *ChtimesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChtimesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChtimesResponse proto.InternalMessageInfo

type ChmodResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChmodResponse) Reset()         { *m = ChmodResponse{} }
func (m *ChmodResponse) String() string { return proto.CompactTextString(m) }
func (*ChmodResponse) ProtoMessage()    {}
func (*ChmodResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{20}
}

func (m *ChmodResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChmodResponse.Unmarshal(m, b)
}
func (m *ChmodResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChmodResponse.Marshal(b, m, deterministic)
}
func (m *ChmodResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChmodResponse.Merge(m, src)
}
func (m *ChmodResponse) XXX_Size() int {
	return xxx_messageInfo_ChmodResponse.Size(m)
}
func (m *ChmodResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChmodResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChmodResponse proto.InternalMessageInfo

type MkdirResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MkdirResponse) Reset()         { *m = MkdirResponse{} }
func (m *MkdirResponse) String() string { return proto.CompactTextString(m) }
func (*MkdirResponse) ProtoMessage()    {}
func (*MkdirResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{21}
}

func (m *MkdirResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MkdirResponse.Unmarshal(m, b)
}
func (m *MkdirResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MkdirResponse.Marshal(b, m, deterministic)
}
func (m *MkdirResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MkdirResponse.Merge(m, src)
}
func (m *MkdirResponse) XXX_Size() int {
	return xxx_messageInfo_MkdirResponse.Size(m)
}
func (m *MkdirResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MkdirResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MkdirResponse proto.InternalMessageInfo

type MkdirAllResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MkdirAllResponse) Reset()         { *m = MkdirAllResponse{} }
func (m *MkdirAllResponse) String() string { return proto.CompactTextString(m) }
func (*MkdirAllResponse) ProtoMessage()    {}
func (*MkdirAllResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{22}
}

func (m *MkdirAllResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MkdirAllResponse.Unmarshal(m, b)
}
func (m *MkdirAllResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MkdirAllResponse.Marshal(b, m, deterministic)
}
func (m *MkdirAllResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MkdirAllResponse.Merge(m, src)
}
func (m *MkdirAllResponse) XXX_Size() int {
	return xxx_messageInfo_MkdirAllResponse.Size(m)
}
func (m *MkdirAllResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MkdirAllResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MkdirAllResponse proto.InternalMessageInfo

type RenameResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RenameResponse) Reset()         { *m = RenameResponse{} }
func (m *RenameResponse) String() string { return proto.CompactTextString(m) }
func (*RenameResponse) ProtoMessage()    {}
func (*RenameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{23}
}

func (m *RenameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenameResponse.Unmarshal(m, b)
}
func (m *RenameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenameResponse.Marshal(b, m, deterministic)
}
func (m *RenameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenameResponse.Merge(m, src)
}
func (m *RenameResponse) XXX_Size() int {
	return xxx_messageInfo_RenameResponse.Size(m)
}
func (m *RenameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RenameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RenameResponse proto.InternalMessageInfo

type RemoveAllResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveAllResponse) Reset()         { *m = RemoveAllResponse{} }
func (m *RemoveAllResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveAllResponse) ProtoMessage()    {}
func (*RemoveAllResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{24}
}

func (m *RemoveAllResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveAllResponse.Unmarshal(m, b)
}
func (m *RemoveAllResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveAllResponse.Marshal(b, m, deterministic)
}
func (m *RemoveAllResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveAllResponse.Merge(m, src)
}
func (m *RemoveAllResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveAllResponse.Size(m)
}
func (m *RemoveAllResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveAllResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveAllResponse proto.InternalMessageInfo

type RemoveResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveResponse) Reset()         { *m = RemoveResponse{} }
func (m *RemoveResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveResponse) ProtoMessage()    {}
func (*RemoveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{25}
}

func (m *RemoveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveResponse.Unmarshal(m, b)
}
func (m *RemoveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveResponse.Marshal(b, m, deterministic)
}
func (m *RemoveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveResponse.Merge(m, src)
}
func (m *RemoveResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveResponse.Size(m)
}
func (m *RemoveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveResponse proto.InternalMessageInfo

type FileResponse struct {
	// Types that are valid to be assigned to Response:
	//	*FileResponse_Open
	//	*FileResponse_FileInfo
	//	*FileResponse_Read
	//	*FileResponse_Readdir
	//	*FileResponse_Readdirnames
	//	*FileResponse_Seek
	//	*FileResponse_Write
	Response             isFileResponse_Response `protobuf_oneof:"Response"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *FileResponse) Reset()         { *m = FileResponse{} }
func (m *FileResponse) String() string { return proto.CompactTextString(m) }
func (*FileResponse) ProtoMessage()    {}
func (*FileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{26}
}

func (m *FileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileResponse.Unmarshal(m, b)
}
func (m *FileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileResponse.Marshal(b, m, deterministic)
}
func (m *FileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileResponse.Merge(m, src)
}
func (m *FileResponse) XXX_Size() int {
	return xxx_messageInfo_FileResponse.Size(m)
}
func (m *FileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FileResponse proto.InternalMessageInfo

type isFileResponse_Response interface {
	isFileResponse_Response()
}

type FileResponse_Open struct {
	Open *OpenResponse `protobuf:"bytes,1,opt,name=open,proto3,oneof"`
}

type FileResponse_FileInfo struct {
	FileInfo *FileInfo `protobuf:"bytes,2,opt,name=fileInfo,proto3,oneof"`
}

type FileResponse_Read struct {
	Read *ReadResponse `protobuf:"bytes,3,opt,name=read,proto3,oneof"`
}

type FileResponse_Readdir struct {
	Readdir *ReaddirResponse `protobuf:"bytes,4,opt,name=readdir,proto3,oneof"`
}

type FileResponse_Readdirnames struct {
	Readdirnames *ReaddirnamesResponse `protobuf:"bytes,5,opt,name=readdirnames,proto3,oneof"`
}

type FileResponse_Seek struct {
	Seek *SeekResponse `protobuf:"bytes,6,opt,name=seek,proto3,oneof"`
}

type FileResponse_Write struct {
	Write *WriteResponse `protobuf:"bytes,7,opt,name=write,proto3,oneof"`
}

func (*FileResponse_Open) isFileResponse_Response() {}

func (*FileResponse_FileInfo) isFileResponse_Response() {}

func (*FileResponse_Read) isFileResponse_Response() {}

func (*FileResponse_Readdir) isFileResponse_Response() {}

func (*FileResponse_Readdirnames) isFileResponse_Response() {}

func (*FileResponse_Seek) isFileResponse_Response() {}

func (*FileResponse_Write) isFileResponse_Response() {}

func (m *FileResponse) GetResponse() isFileResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *FileResponse) GetOpen() *OpenResponse {
	if x, ok := m.GetResponse().(*FileResponse_Open); ok {
		return x.Open
	}
	return nil
}

func (m *FileResponse) GetFileInfo() *FileInfo {
	if x, ok := m.GetResponse().(*FileResponse_FileInfo); ok {
		return x.FileInfo
	}
	return nil
}

func (m *FileResponse) GetRead() *ReadResponse {
	if x, ok := m.GetResponse().(*FileResponse_Read); ok {
		return x.Read
	}
	return nil
}

func (m *FileResponse) GetReaddir() *ReaddirResponse {
	if x, ok := m.GetResponse().(*FileResponse_Readdir); ok {
		return x.Readdir
	}
	return nil
}

func (m *FileResponse) GetReaddirnames() *ReaddirnamesResponse {
	if x, ok := m.GetResponse().(*FileResponse_Readdirnames); ok {
		return x.Readdirnames
	}
	return nil
}

func (m *FileResponse) GetSeek() *SeekResponse {
	if x, ok := m.GetResponse().(*FileResponse_Seek); ok {
		return x.Seek
	}
	return nil
}

func (m *FileResponse) GetWrite() *WriteResponse {
	if x, ok := m.GetResponse().(*FileResponse_Write); ok {
		return x.Write
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FileResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FileResponse_Open)(nil),
		(*FileResponse_FileInfo)(nil),
		(*FileResponse_Read)(nil),
		(*FileResponse_Readdir)(nil),
		(*FileResponse_Readdirnames)(nil),
		(*FileResponse_Seek)(nil),
		(*FileResponse_Write)(nil),
	}
}

type OpenResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenResponse) Reset()         { *m = OpenResponse{} }
func (m *OpenResponse) String() string { return proto.CompactTextString(m) }
func (*OpenResponse) ProtoMessage()    {}
func (*OpenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{27}
}

func (m *OpenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenResponse.Unmarshal(m, b)
}
func (m *OpenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenResponse.Marshal(b, m, deterministic)
}
func (m *OpenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenResponse.Merge(m, src)
}
func (m *OpenResponse) XXX_Size() int {
	return xxx_messageInfo_OpenResponse.Size(m)
}
func (m *OpenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OpenResponse proto.InternalMessageInfo

type ReadResponse struct {
	Content              []byte   `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadResponse) Reset()         { *m = ReadResponse{} }
func (m *ReadResponse) String() string { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()    {}
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{28}
}

func (m *ReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadResponse.Unmarshal(m, b)
}
func (m *ReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadResponse.Marshal(b, m, deterministic)
}
func (m *ReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadResponse.Merge(m, src)
}
func (m *ReadResponse) XXX_Size() int {
	return xxx_messageInfo_ReadResponse.Size(m)
}
func (m *ReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadResponse proto.InternalMessageInfo

func (m *ReadResponse) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type ReaddirResponse struct {
	FileInfo             []*FileInfo `protobuf:"bytes,1,rep,name=fileInfo,proto3" json:"fileInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ReaddirResponse) Reset()         { *m = ReaddirResponse{} }
func (m *ReaddirResponse) String() string { return proto.CompactTextString(m) }
func (*ReaddirResponse) ProtoMessage()    {}
func (*ReaddirResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{29}
}

func (m *ReaddirResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReaddirResponse.Unmarshal(m, b)
}
func (m *ReaddirResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReaddirResponse.Marshal(b, m, deterministic)
}
func (m *ReaddirResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReaddirResponse.Merge(m, src)
}
func (m *ReaddirResponse) XXX_Size() int {
	return xxx_messageInfo_ReaddirResponse.Size(m)
}
func (m *ReaddirResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReaddirResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReaddirResponse proto.InternalMessageInfo

func (m *ReaddirResponse) GetFileInfo() []*FileInfo {
	if m != nil {
		return m.FileInfo
	}
	return nil
}

type ReaddirnamesResponse struct {
	Names                []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReaddirnamesResponse) Reset()         { *m = ReaddirnamesResponse{} }
func (m *ReaddirnamesResponse) String() string { return proto.CompactTextString(m) }
func (*ReaddirnamesResponse) ProtoMessage()    {}
func (*ReaddirnamesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{30}
}

func (m *ReaddirnamesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReaddirnamesResponse.Unmarshal(m, b)
}
func (m *ReaddirnamesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReaddirnamesResponse.Marshal(b, m, deterministic)
}
func (m *ReaddirnamesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReaddirnamesResponse.Merge(m, src)
}
func (m *ReaddirnamesResponse) XXX_Size() int {
	return xxx_messageInfo_ReaddirnamesResponse.Size(m)
}
func (m *ReaddirnamesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReaddirnamesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReaddirnamesResponse proto.InternalMessageInfo

func (m *ReaddirnamesResponse) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

type SeekResponse struct {
	Offset               int64    `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SeekResponse) Reset()         { *m = SeekResponse{} }
func (m *SeekResponse) String() string { return proto.CompactTextString(m) }
func (*SeekResponse) ProtoMessage()    {}
func (*SeekResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{31}
}

func (m *SeekResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SeekResponse.Unmarshal(m, b)
}
func (m *SeekResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SeekResponse.Marshal(b, m, deterministic)
}
func (m *SeekResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SeekResponse.Merge(m, src)
}
func (m *SeekResponse) XXX_Size() int {
	return xxx_messageInfo_SeekResponse.Size(m)
}
func (m *SeekResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SeekResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SeekResponse proto.InternalMessageInfo

func (m *SeekResponse) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type WriteResponse struct {
	BytesWritten         int64    `protobuf:"varint,1,opt,name=bytesWritten,proto3" json:"bytesWritten,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteResponse) Reset()         { *m = WriteResponse{} }
func (m *WriteResponse) String() string { return proto.CompactTextString(m) }
func (*WriteResponse) ProtoMessage()    {}
func (*WriteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{32}
}

func (m *WriteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteResponse.Unmarshal(m, b)
}
func (m *WriteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteResponse.Marshal(b, m, deterministic)
}
func (m *WriteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteResponse.Merge(m, src)
}
func (m *WriteResponse) XXX_Size() int {
	return xxx_messageInfo_WriteResponse.Size(m)
}
func (m *WriteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WriteResponse proto.InternalMessageInfo

func (m *WriteResponse) GetBytesWritten() int64 {
	if m != nil {
		return m.BytesWritten
	}
	return 0
}

func init() {
	proto.RegisterEnum("index.SeekRequest_Whence", SeekRequest_Whence_name, SeekRequest_Whence_value)
	proto.RegisterType((*FileRequest)(nil), "index.FileRequest")
	proto.RegisterType((*ChtimesRequest)(nil), "index.ChtimesRequest")
	proto.RegisterType((*ChmodRequest)(nil), "index.ChmodRequest")
	proto.RegisterType((*MkdirRequest)(nil), "index.MkdirRequest")
	proto.RegisterType((*MkdirAllRequest)(nil), "index.MkdirAllRequest")
	proto.RegisterType((*RenameRequest)(nil), "index.RenameRequest")
	proto.RegisterType((*RemoveAllRequest)(nil), "index.RemoveAllRequest")
	proto.RegisterType((*RemoveRequest)(nil), "index.RemoveRequest")
	proto.RegisterType((*OpenRequest)(nil), "index.OpenRequest")
	proto.RegisterType((*StatRequest)(nil), "index.StatRequest")
	proto.RegisterType((*TruncateRequest)(nil), "index.TruncateRequest")
	proto.RegisterType((*ReadRequest)(nil), "index.ReadRequest")
	proto.RegisterType((*ReadAtRequest)(nil), "index.ReadAtRequest")
	proto.RegisterType((*ReaddirRequest)(nil), "index.ReaddirRequest")
	proto.RegisterType((*ReaddirnamesRequest)(nil), "index.ReaddirnamesRequest")
	proto.RegisterType((*SeekRequest)(nil), "index.SeekRequest")
	proto.RegisterType((*WriteRequest)(nil), "index.WriteRequest")
	proto.RegisterType((*WriteAtRequest)(nil), "index.WriteAtRequest")
	proto.RegisterType((*FileInfo)(nil), "index.FileInfo")
	proto.RegisterType((*ChtimesResponse)(nil), "index.ChtimesResponse")
	proto.RegisterType((*ChmodResponse)(nil), "index.ChmodResponse")
	proto.RegisterType((*MkdirResponse)(nil), "index.MkdirResponse")
	proto.RegisterType((*MkdirAllResponse)(nil), "index.MkdirAllResponse")
	proto.RegisterType((*RenameResponse)(nil), "index.RenameResponse")
	proto.RegisterType((*RemoveAllResponse)(nil), "index.RemoveAllResponse")
	proto.RegisterType((*RemoveResponse)(nil), "index.RemoveResponse")
	proto.RegisterType((*FileResponse)(nil), "index.FileResponse")
	proto.RegisterType((*OpenResponse)(nil), "index.OpenResponse")
	proto.RegisterType((*ReadResponse)(nil), "index.ReadResponse")
	proto.RegisterType((*ReaddirResponse)(nil), "index.ReaddirResponse")
	proto.RegisterType((*ReaddirnamesResponse)(nil), "index.ReaddirnamesResponse")
	proto.RegisterType((*SeekResponse)(nil), "index.SeekResponse")
	proto.RegisterType((*WriteResponse)(nil), "index.WriteResponse")
}

func init() {
	proto.RegisterFile("index.proto", fileDescriptor_f750e0f7889345b5)
}

var fileDescriptor_f750e0f7889345b5 = []byte{
	// 1022 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x56, 0x5d, 0x73, 0x1b, 0x35,
	0x14, 0xed, 0x7a, 0xed, 0xb5, 0x7d, 0xfd, 0x59, 0xd9, 0x4d, 0x17, 0xf3, 0x92, 0x11, 0x43, 0x70,
	0x49, 0xc9, 0x50, 0x07, 0x18, 0x18, 0x66, 0x3a, 0x38, 0x81, 0x0e, 0x3c, 0xa4, 0x01, 0xd5, 0x90,
	0xe7, 0x6d, 0x56, 0x26, 0x3b, 0xb1, 0x77, 0x8d, 0x77, 0xd3, 0x00, 0xcf, 0xfc, 0x01, 0x7e, 0x29,
	0x0f, 0xfc, 0x81, 0xce, 0x95, 0xb4, 0xfa, 0x70, 0x6c, 0x3f, 0x59, 0xba, 0x7b, 0xce, 0x95, 0x74,
	0x75, 0x8f, 0x8e, 0xa1, 0x95, 0xa4, 0x31, 0xff, 0xf3, 0x64, 0xb5, 0xce, 0x8a, 0x8c, 0xd4, 0xc4,
	0x84, 0xfe, 0x5b, 0x85, 0xd6, 0xab, 0x64, 0xc1, 0x19, 0xff, 0xe3, 0x8e, 0xe7, 0x05, 0x19, 0x42,
	0x35, 0x8d, 0x96, 0x3c, 0xf4, 0x0e, 0xbd, 0x71, 0xf3, 0xc7, 0x47, 0x4c, 0xcc, 0xc8, 0x18, 0xaa,
	0xd9, 0x8a, 0xa7, 0x61, 0xe5, 0xd0, 0x1b, 0xb7, 0x26, 0xe4, 0x44, 0x26, 0xba, 0x5c, 0xf1, 0x54,
	0xf1, 0x10, 0x89, 0x08, 0x44, 0xe6, 0x45, 0x54, 0x84, 0xbe, 0x83, 0x7c, 0x53, 0x44, 0x85, 0x85,
	0x44, 0x04, 0xf9, 0x02, 0x1a, 0xc5, 0xfa, 0x2e, 0xbd, 0x8e, 0x0a, 0x1e, 0x56, 0x05, 0xfa, 0x40,
	0xa1, 0x67, 0x2a, 0x6c, 0x18, 0x1a, 0x89, 0xf9, 0xd7, 0x3c, 0x8a, 0xc3, 0x9a, 0x93, 0x9f, 0xf1,
	0x28, 0xb6, 0xf2, 0x23, 0x82, 0x9c, 0x40, 0x80, 0xbf, 0xd3, 0x22, 0x0c, 0x04, 0x76, 0x68, 0x61,
	0xa7, 0xd6, 0x6e, 0x14, 0x8a, 0xbc, 0x80, 0x3a, 0x8e, 0xe2, 0x64, 0x1d, 0xd6, 0x05, 0xe1, 0x89,
	0x45, 0x88, 0x93, 0xb5, 0x61, 0x94, 0x38, 0xf2, 0x1d, 0xb4, 0xd5, 0x10, 0xab, 0x94, 0x87, 0x0d,
	0xc1, 0x1b, 0xb9, 0x3c, 0xf1, 0xc9, 0x90, 0x1d, 0x86, 0x28, 0x17, 0xe7, 0xb7, 0x61, 0xd3, 0x2d,
	0x17, 0xe7, 0xb7, 0x76, 0xb9, 0x38, 0xbf, 0x25, 0xc7, 0x50, 0xbb, 0x5f, 0x27, 0x05, 0x0f, 0x41,
	0x40, 0x07, 0x0a, 0x7a, 0x85, 0x31, 0x83, 0x95, 0x18, 0x3c, 0x8b, 0x18, 0x4c, 0x8b, 0xb0, 0xe5,
	0x9c, 0xe5, 0x4a, 0x46, 0xad, 0xb3, 0x28, 0xdc, 0x59, 0x13, 0xea, 0x2a, 0x4a, 0x7f, 0x83, 0xee,
	0xf9, 0x4d, 0x91, 0x98, 0x6d, 0x13, 0x62, 0x77, 0x85, 0xea, 0x89, 0x21, 0xd4, 0xa2, 0x38, 0xe6,
	0xb1, 0x68, 0x0a, 0x9f, 0xc9, 0x09, 0x19, 0x41, 0x63, 0x99, 0xc5, 0xc9, 0x3c, 0xe1, 0xb1, 0xe8,
	0x01, 0x9f, 0xe9, 0x39, 0xfd, 0x0a, 0xda, 0xe7, 0x37, 0xcb, 0x2c, 0xde, 0x97, 0x95, 0x40, 0x75,
	0x99, 0xc5, 0x5c, 0x24, 0xed, 0x30, 0x31, 0x46, 0xde, 0xc5, 0xad, 0xb9, 0x81, 0x5d, 0xbc, 0x15,
	0x5f, 0x2f, 0x4b, 0x1e, 0x8e, 0xe9, 0x37, 0xd0, 0x13, 0xbc, 0xe9, 0x62, 0x61, 0x51, 0x57, 0x51,
	0x71, 0x53, 0x52, 0x71, 0xbc, 0x95, 0x7a, 0x0e, 0x1d, 0xc6, 0x31, 0x71, 0x49, 0x0c, 0xa1, 0x9e,
	0x2d, 0xe2, 0xd7, 0x66, 0xd9, 0x72, 0x8a, 0x5f, 0x52, 0x7e, 0x2f, 0xbe, 0x54, 0xe4, 0x17, 0x35,
	0xa5, 0x47, 0xd0, 0x67, 0x7c, 0x99, 0xbd, 0xe3, 0xfb, 0x37, 0x40, 0x3f, 0xc2, 0xc5, 0x10, 0xb7,
	0xe7, 0x80, 0xf4, 0x17, 0x68, 0x59, 0x7a, 0xdb, 0x55, 0x83, 0xf9, 0x22, 0xfa, 0x5d, 0x5d, 0x88,
	0x18, 0xe3, 0x7d, 0xcc, 0x93, 0x05, 0xbf, 0xc0, 0x9a, 0xfa, 0xe2, 0x80, 0x7a, 0x4e, 0x3b, 0xd0,
	0xb2, 0x84, 0x49, 0x3f, 0x86, 0xde, 0x86, 0xf2, 0x30, 0x63, 0x9e, 0xfc, 0x2d, 0x57, 0xf1, 0x99,
	0x18, 0x23, 0xcb, 0x92, 0x1b, 0xfd, 0x04, 0x37, 0x6f, 0x29, 0x8a, 0x1c, 0x40, 0x90, 0xcd, 0xe7,
	0x39, 0x2f, 0x14, 0x4b, 0xcd, 0xe8, 0x11, 0x74, 0x5d, 0x25, 0x61, 0x07, 0x5d, 0x67, 0x77, 0xa9,
	0x04, 0xd6, 0x98, 0x9c, 0xd0, 0x63, 0x18, 0x6c, 0x51, 0xce, 0x0e, 0xf0, 0x3f, 0x1e, 0xb4, 0x2c,
	0xb5, 0xec, 0x5a, 0x9c, 0xbc, 0x80, 0xe0, 0xfe, 0x86, 0xa7, 0xd7, 0xf2, 0x8e, 0xba, 0x93, 0x0f,
	0x1e, 0x2a, 0xed, 0xe4, 0x4a, 0x00, 0x98, 0x02, 0xd2, 0x4f, 0x21, 0x90, 0x11, 0x52, 0x07, 0x7f,
	0x76, 0xf9, 0x73, 0xff, 0x11, 0x69, 0x41, 0xfd, 0xfc, 0x57, 0xc6, 0x7e, 0x78, 0x3d, 0xeb, 0x7b,
	0x04, 0x20, 0x38, 0xbb, 0x9c, 0xcd, 0x2e, 0x2f, 0xfa, 0x15, 0x3a, 0x86, 0xb6, 0x2d, 0x44, 0xec,
	0x89, 0xeb, 0x2c, 0x2d, 0xb8, 0xda, 0x6e, 0x9b, 0x95, 0x53, 0x7a, 0x06, 0x5d, 0x57, 0x83, 0x3b,
	0xb7, 0x6c, 0xe5, 0xa8, 0xb8, 0x39, 0xde, 0x41, 0x03, 0x9f, 0xec, 0x9f, 0xd2, 0x79, 0xb6, 0xab,
	0x0f, 0xc4, 0xad, 0x55, 0xcc, 0xad, 0x69, 0x5d, 0xf9, 0x46, 0x57, 0xb8, 0xc2, 0x32, 0x8b, 0x67,
	0xc9, 0x52, 0x3e, 0xc0, 0x3e, 0x2b, 0xa7, 0x58, 0xec, 0x24, 0xff, 0x3e, 0x59, 0x8b, 0x67, 0xb6,
	0xc1, 0xe4, 0x84, 0x3e, 0x86, 0x9e, 0x7e, 0x17, 0xf2, 0x55, 0x96, 0xe6, 0x9c, 0xf6, 0xa0, 0xa3,
	0x24, 0x6d, 0x02, 0x4a, 0xab, 0x2a, 0x40, 0xa0, 0x6f, 0x44, 0xa8, 0x62, 0x7d, 0x6c, 0x05, 0xa9,
	0x2e, 0x15, 0x19, 0xc0, 0x63, 0x4b, 0x2a, 0x36, 0x4c, 0xea, 0x42, 0x45, 0xfe, 0xab, 0x40, 0x5b,
	0xba, 0x95, 0x0c, 0x90, 0x67, 0xca, 0x98, 0x3c, 0xe7, 0x51, 0x94, 0x42, 0x91, 0x10, 0xed, 0x4c,
	0x9f, 0x49, 0x25, 0x60, 0xd5, 0x94, 0x8f, 0xf5, 0x14, 0xbc, 0x2c, 0x26, 0x1a, 0x4d, 0x09, 0xc1,
	0xcc, 0xc2, 0x68, 0x7c, 0x27, 0xb3, 0xec, 0x7c, 0x93, 0x59, 0x38, 0xcd, 0xc4, 0x38, 0x87, 0x6b,
	0x64, 0xba, 0xdf, 0x35, 0x41, 0x5b, 0xc7, 0x74, 0xc3, 0x3a, 0xa4, 0x9f, 0x7d, 0xb8, 0xd5, 0x3a,
	0x34, 0xdb, 0xf5, 0x8e, 0x67, 0xca, 0x3b, 0x02, 0x67, 0x87, 0xb2, 0xa3, 0xcd, 0x0e, 0x85, 0x79,
	0x3c, 0x2f, 0xcd, 0xa3, 0xee, 0x58, 0xa1, 0xea, 0x59, 0x0d, 0x96, 0xa0, 0x33, 0x80, 0x86, 0xae,
	0x78, 0x17, 0xda, 0x76, 0x35, 0xb1, 0xd3, 0xed, 0x1a, 0xec, 0xe9, 0xf4, 0x97, 0xd0, 0xdb, 0x38,
	0x3f, 0x39, 0xb6, 0xae, 0xc0, 0x3b, 0xf4, 0xb7, 0x5c, 0x81, 0xb9, 0x00, 0xfa, 0x1c, 0x86, 0xdb,
	0xca, 0x80, 0xbd, 0x29, 0x4b, 0x86, 0x19, 0x9a, 0x4c, 0x4e, 0xe8, 0x11, 0xb4, 0xed, 0x93, 0xef,
	0x7c, 0x85, 0x4e, 0xa1, 0xe3, 0x9c, 0x9a, 0x50, 0x68, 0xbf, 0xfd, 0xab, 0xe0, 0x39, 0x46, 0x0b,
	0xd5, 0x49, 0x3e, 0x73, 0x62, 0x93, 0xff, 0x7d, 0xa8, 0xbc, 0x7a, 0x43, 0x8e, 0xa1, 0x8a, 0xef,
	0x25, 0x21, 0xd6, 0xa6, 0x95, 0x8a, 0x47, 0x9b, 0x07, 0x21, 0x5f, 0x43, 0x5d, 0x89, 0x85, 0x94,
	0xe6, 0xeb, 0x9a, 0xea, 0xe8, 0x60, 0x33, 0xac, 0x76, 0x34, 0x81, 0x9a, 0xd0, 0x14, 0x19, 0x68,
	0x80, 0x31, 0xcd, 0xd1, 0xd0, 0x0d, 0x1a, 0x8e, 0x50, 0x99, 0xe6, 0xd8, 0x86, 0xa9, 0x39, 0x8e,
	0x32, 0xc9, 0xb7, 0xd0, 0x28, 0x95, 0x49, 0x0e, 0x6c, 0x84, 0xb1, 0xab, 0xd1, 0xd3, 0x07, 0x71,
	0x45, 0xfe, 0x12, 0x02, 0x29, 0x61, 0x62, 0xfe, 0x57, 0x59, 0x7e, 0x39, 0x7a, 0xb2, 0x11, 0x55,
	0xb4, 0x97, 0xd0, 0xd4, 0x3a, 0x27, 0x4f, 0x35, 0xc6, 0x35, 0xc9, 0x51, 0xf8, 0xf0, 0x83, 0xbd,
	0x2c, 0x06, 0xad, 0x65, 0x2d, 0xe7, 0xb4, 0x96, 0xb5, 0xdf, 0x0d, 0x72, 0x0a, 0x55, 0xec, 0xe2,
	0xad, 0x37, 0x37, 0x70, 0x62, 0x92, 0x30, 0xf6, 0x3e, 0xf7, 0xde, 0x06, 0xe2, 0x8f, 0xf2, 0xe9,
	0xfb, 0x00, 0x00, 0x00, 0xff, 0xff, 0x25, 0x3c, 0x6a, 0xbd, 0x37, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FSClient is the client API for FS service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FSClient interface {
	Stat(ctx context.Context, in *FileRequest, opts ...grpc.CallOption) (*FileInfo, error)
	Chtimes(ctx context.Context, in *ChtimesRequest, opts ...grpc.CallOption) (*ChtimesResponse, error)
	Chmod(ctx context.Context, in *ChmodRequest, opts ...grpc.CallOption) (*ChmodResponse, error)
	Mkdir(ctx context.Context, in *MkdirRequest, opts ...grpc.CallOption) (*MkdirResponse, error)
	MkdirAll(ctx context.Context, in *MkdirAllRequest, opts ...grpc.CallOption) (*MkdirAllResponse, error)
	Rename(ctx context.Context, in *RenameRequest, opts ...grpc.CallOption) (*RenameResponse, error)
	RemoveAll(ctx context.Context, in *RemoveAllRequest, opts ...grpc.CallOption) (*RemoveAllResponse, error)
	Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error)
	Open(ctx context.Context, opts ...grpc.CallOption) (FS_OpenClient, error)
}

type fSClient struct {
	cc grpc.ClientConnInterface
}

func NewFSClient(cc grpc.ClientConnInterface) FSClient {
	return &fSClient{cc}
}

func (c *fSClient) Stat(ctx context.Context, in *FileRequest, opts ...grpc.CallOption) (*FileInfo, error) {
	out := new(FileInfo)
	err := c.cc.Invoke(ctx, "/index.FS/Stat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fSClient) Chtimes(ctx context.Context, in *ChtimesRequest, opts ...grpc.CallOption) (*ChtimesResponse, error) {
	out := new(ChtimesResponse)
	err := c.cc.Invoke(ctx, "/index.FS/Chtimes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fSClient) Chmod(ctx context.Context, in *ChmodRequest, opts ...grpc.CallOption) (*ChmodResponse, error) {
	out := new(ChmodResponse)
	err := c.cc.Invoke(ctx, "/index.FS/Chmod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fSClient) Mkdir(ctx context.Context, in *MkdirRequest, opts ...grpc.CallOption) (*MkdirResponse, error) {
	out := new(MkdirResponse)
	err := c.cc.Invoke(ctx, "/index.FS/Mkdir", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fSClient) MkdirAll(ctx context.Context, in *MkdirAllRequest, opts ...grpc.CallOption) (*MkdirAllResponse, error) {
	out := new(MkdirAllResponse)
	err := c.cc.Invoke(ctx, "/index.FS/MkdirAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fSClient) Rename(ctx context.Context, in *RenameRequest, opts ...grpc.CallOption) (*RenameResponse, error) {
	out := new(RenameResponse)
	err := c.cc.Invoke(ctx, "/index.FS/Rename", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fSClient) RemoveAll(ctx context.Context, in *RemoveAllRequest, opts ...grpc.CallOption) (*RemoveAllResponse, error) {
	out := new(RemoveAllResponse)
	err := c.cc.Invoke(ctx, "/index.FS/RemoveAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fSClient) Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error) {
	out := new(RemoveResponse)
	err := c.cc.Invoke(ctx, "/index.FS/Remove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fSClient) Open(ctx context.Context, opts ...grpc.CallOption) (FS_OpenClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FS_serviceDesc.Streams[0], "/index.FS/Open", opts...)
	if err != nil {
		return nil, err
	}
	x := &fSOpenClient{stream}
	return x, nil
}

type FS_OpenClient interface {
	Send(*FileRequest) error
	Recv() (*FileResponse, error)
	grpc.ClientStream
}

type fSOpenClient struct {
	grpc.ClientStream
}

func (x *fSOpenClient) Send(m *FileRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *fSOpenClient) Recv() (*FileResponse, error) {
	m := new(FileResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// FSServer is the server API for FS service.
type FSServer interface {
	Stat(context.Context, *FileRequest) (*FileInfo, error)
	Chtimes(context.Context, *ChtimesRequest) (*ChtimesResponse, error)
	Chmod(context.Context, *ChmodRequest) (*ChmodResponse, error)
	Mkdir(context.Context, *MkdirRequest) (*MkdirResponse, error)
	MkdirAll(context.Context, *MkdirAllRequest) (*MkdirAllResponse, error)
	Rename(context.Context, *RenameRequest) (*RenameResponse, error)
	RemoveAll(context.Context, *RemoveAllRequest) (*RemoveAllResponse, error)
	Remove(context.Context, *RemoveRequest) (*RemoveResponse, error)
	Open(FS_OpenServer) error
}

// UnimplementedFSServer can be embedded to have forward compatible implementations.
type UnimplementedFSServer struct {
}

func (*UnimplementedFSServer) Stat(ctx context.Context, req *FileRequest) (*FileInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Stat not implemented")
}
func (*UnimplementedFSServer) Chtimes(ctx context.Context, req *ChtimesRequest) (*ChtimesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Chtimes not implemented")
}
func (*UnimplementedFSServer) Chmod(ctx context.Context, req *ChmodRequest) (*ChmodResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Chmod not implemented")
}
func (*UnimplementedFSServer) Mkdir(ctx context.Context, req *MkdirRequest) (*MkdirResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Mkdir not implemented")
}
func (*UnimplementedFSServer) MkdirAll(ctx context.Context, req *MkdirAllRequest) (*MkdirAllResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MkdirAll not implemented")
}
func (*UnimplementedFSServer) Rename(ctx context.Context, req *RenameRequest) (*RenameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Rename not implemented")
}
func (*UnimplementedFSServer) RemoveAll(ctx context.Context, req *RemoveAllRequest) (*RemoveAllResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveAll not implemented")
}
func (*UnimplementedFSServer) Remove(ctx context.Context, req *RemoveRequest) (*RemoveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Remove not implemented")
}
func (*UnimplementedFSServer) Open(srv FS_OpenServer) error {
	return status.Errorf(codes.Unimplemented, "method Open not implemented")
}

func RegisterFSServer(s *grpc.Server, srv FSServer) {
	s.RegisterService(&_FS_serviceDesc, srv)
}

func _FS_Stat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FSServer).Stat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.FS/Stat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FSServer).Stat(ctx, req.(*FileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FS_Chtimes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChtimesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FSServer).Chtimes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.FS/Chtimes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FSServer).Chtimes(ctx, req.(*ChtimesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FS_Chmod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChmodRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FSServer).Chmod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.FS/Chmod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FSServer).Chmod(ctx, req.(*ChmodRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FS_Mkdir_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MkdirRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FSServer).Mkdir(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.FS/Mkdir",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FSServer).Mkdir(ctx, req.(*MkdirRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FS_MkdirAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MkdirAllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FSServer).MkdirAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.FS/MkdirAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FSServer).MkdirAll(ctx, req.(*MkdirAllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FS_Rename_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FSServer).Rename(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.FS/Rename",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FSServer).Rename(ctx, req.(*RenameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FS_RemoveAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveAllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FSServer).RemoveAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.FS/RemoveAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FSServer).RemoveAll(ctx, req.(*RemoveAllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FS_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FSServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.FS/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FSServer).Remove(ctx, req.(*RemoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FS_Open_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(FSServer).Open(&fSOpenServer{stream})
}

type FS_OpenServer interface {
	Send(*FileResponse) error
	Recv() (*FileRequest, error)
	grpc.ServerStream
}

type fSOpenServer struct {
	grpc.ServerStream
}

func (x *fSOpenServer) Send(m *FileResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *fSOpenServer) Recv() (*FileRequest, error) {
	m := new(FileRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _FS_serviceDesc = grpc.ServiceDesc{
	ServiceName: "index.FS",
	HandlerType: (*FSServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Stat",
			Handler:    _FS_Stat_Handler,
		},
		{
			MethodName: "Chtimes",
			Handler:    _FS_Chtimes_Handler,
		},
		{
			MethodName: "Chmod",
			Handler:    _FS_Chmod_Handler,
		},
		{
			MethodName: "Mkdir",
			Handler:    _FS_Mkdir_Handler,
		},
		{
			MethodName: "MkdirAll",
			Handler:    _FS_MkdirAll_Handler,
		},
		{
			MethodName: "Rename",
			Handler:    _FS_Rename_Handler,
		},
		{
			MethodName: "RemoveAll",
			Handler:    _FS_RemoveAll_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _FS_Remove_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Open",
			Handler:       _FS_Open_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "index.proto",
}
